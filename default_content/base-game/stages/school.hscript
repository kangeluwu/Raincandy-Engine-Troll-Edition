function onCreate()
{
	GameOverSubstate.deathSoundName = 'fnf_loss_sfx-pixel';
	GameOverSubstate.loopSoundName = 'gameOver-pixel';
	GameOverSubstate.endSoundName = 'gameOverEnd-pixel';

    if(game.hudSkin == 'default')
        game.hudSkin = 'pixel';

	PlayState.isPixelStage = true;
}

function roundTo(num, roundFactor){
	return Math.round(num / 6) * 6;
}

////
var bgGirls = null;
var isPissed = true;
function onLoad(){


	var bgSky:BGSprite = new BGSprite('stages/school/weebSky', 0, 0, 0.1, 0.1);
	add(bgSky);
	bgSky.antialiasing = false;

	var repositionShit = -200;

	var bgSchool:BGSprite = new BGSprite('stages/school/weebSchool', repositionShit, 0, 0.6, 0.90);
	add(bgSchool);
	bgSchool.antialiasing = false;

	var bgStreet:BGSprite = new BGSprite('stages/school/weebStreet', repositionShit, 0, 0.95, 0.95);
	add(bgStreet);
	bgStreet.antialiasing = false;

	var widShit = Std.int(bgSky.width * 6);
	if(!ClientPrefs.lowQuality) {
		var fgTrees:BGSprite = new BGSprite('stages/school/weebTreesBack', repositionShit + 170, 130, 0.9, 0.9);
		fgTrees.setGraphicSize(Std.int(widShit * 0.8));
		fgTrees.updateHitbox();
		add(fgTrees);
		fgTrees.antialiasing = false;
	}

	var bgTrees:FlxSprite = new FlxSprite(repositionShit - 380, -800);
	bgTrees.frames = Paths.getPackerAtlas('stages/school/weebTrees');
	bgTrees.animation.add('treeLoop', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], 12);
	bgTrees.animation.play('treeLoop');
	bgTrees.scrollFactor.set(0.85, 0.85);
	add(bgTrees);
	bgTrees.antialiasing = false;

	if(!ClientPrefs.lowQuality) {
		var treeLeaves:BGSprite = new BGSprite('stages/school/petals', repositionShit, -40, 0.85, 0.85, ['PETALS ALL'], true);
		treeLeaves.setGraphicSize(widShit);
		treeLeaves.updateHitbox();
		add(treeLeaves);
		treeLeaves.antialiasing = false;
	}

	bgSky.setGraphicSize(widShit);
	bgSchool.setGraphicSize(widShit);
	bgStreet.setGraphicSize(widShit);
	bgTrees.setGraphicSize(Std.int(widShit * 1.4));

	bgSky.updateHitbox();
	bgSchool.updateHitbox();
	bgStreet.updateHitbox();
	bgTrees.updateHitbox();


	if(!ClientPrefs.lowQuality) {
		bgGirls = new FlxSprite(-100, 190);
		bgGirls.frames = Paths.getSparrowAtlas('stages/school/bgFreaks');
		bgGirls.scrollFactor.set(0.9, 0.9);
		checkPissed();
		bgGirls.setGraphicSize(Std.int(bgGirls.width * 6));
		bgGirls.updateHitbox();
		add(bgGirls);
		bgGirls.antialiasing = false;
	}
	
	
	for (spr in this.members){
		spr.setPosition(
			roundTo(spr.x, 6),
			roundTo(spr.y, 6)
		);
	}

}

function onStartCountdown(){
	if (!game.skipCountdown){
		if (isPissed)
	FlxG.sound.play(Paths.sound('ANGRY_TEXT_BOX'));
	}
}
function checkPissed(){
	if (PlayState.SONG != null && (PlayState.SONG.song.toLowerCase() == 'roses' || (Reflect.hasField(PlayState.SONG,'isMoody') && Reflect.field(PlayState.SONG,'isMoody')))){
			isPissed = false;
			
		}else{
			isPissed = true;
		}
		swapDanceType();
}
function swapDanceType()
	{
		isPissed = !isPissed;
		if (bgGirls != null){
		if(!isPissed) { //Gets unpissed
			bgGirls.animation.addByIndices('danceLeft', 'BG girls group', CoolUtil.numberArray(14), "", 24, false);
			bgGirls.animation.addByIndices('danceRight', 'BG girls group', CoolUtil.numberArray(30, 15), "", 24, false);
		} else { //Pisses
			bgGirls.animation.addByIndices('danceLeft', 'BG fangirls dissuaded', CoolUtil.numberArray(14), "", 24, false);
			bgGirls.animation.addByIndices('danceRight', 'BG fangirls dissuaded', CoolUtil.numberArray(30, 15), "", 24, false);
		}
		danceGirls();
	}
	}
var danceDir = false;
function danceGirls(){
	danceDir = !danceDir;
	if(bgGirls!=null)
	bgGirls.animation.play(danceDir ? 'danceRight' : 'danceLeft', true);
}

onCountdownTick = danceGirls;

function onBeatHit(){
	if (bgGirls != null){
	danceGirls();
	}
}
function onDestroy(){
	PlayState.isPixelStage = false;
}